{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/title/index.tsx","webpack:///./src/components/links/index.tsx","webpack:///./src/components/card/index.tsx"],"names":["BlogPages","render","groups","groupBy","this","props","data","allMarkdownRemark","edges","filter","i","node","frontmatter","published","edge","category","categories","_loop","group","itens","groupName","element","react__WEBPACK_IMPORTED_MODULE_0__","key","className","length","map","_components_card__WEBPACK_IMPORTED_MODULE_2__","fileAbsolutePath","absolutePath","title","date","Date","languages","description","push","_components_title__WEBPACK_IMPORTED_MODULE_3__","notHome","_components_links__WEBPACK_IMPORTED_MODULE_4__","React","pageQuery","Title","href","Links","state","menuOpen","flipState","_this","setState","menuItensJSX","to","external","target","item","rest","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_5__","Object","assign","Card","pathTourlResolver","path","split","replace","_this$props","react__WEBPACK_IMPORTED_MODULE_2__","getUTCFullYear","getUTCMonth","getUTCDate"],"mappings":"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","file":"component---src-pages-blog-tsx-3acfb459b2e0cf640631.js","sourcesContent":["import * as React from \"react\";\n//@ts-ignore\nimport * as groupBy from \"lodash.groupby\";\n\nimport Card from \"../components/card\";\nimport Grid from \"../components/grid\";\nimport Title from \"../components/title\";\nimport Links from \"../components/links\";\n\ninterface IndexPageProps {\n\tdata: {\n\t\tsite: {\n\t\t\tsiteMetadata: {\n\t\t\t\ttitle: string;\n\t\t\t};\n\t\t};\n\t\tallMarkdownRemark: {\n\t\t\tedges: IEdge[];\n\t\t};\n\t};\n}\n\ninterface IEdge {\n\tnode: {\n\t\tfileAbsolutePath: string;\n\t\tfrontmatter: {\n\t\t\ttitle: string;\n\t\t\tdate: string;\n\t\t\ttags?: string[];\n\t\t\tcategory?: string;\n\t\t\tdescription?: string;\n\t\t\tpublished: boolean;\n\t\t};\n\t};\n}\n\nexport default class BlogPages extends React.Component<IndexPageProps, {}> {\n\tpublic render() {\n\t\tconst groups = groupBy(\n\t\t\tthis.props.data.allMarkdownRemark.edges.filter(i => i.node.frontmatter.published),\n\t\t\t(edge: IEdge) => edge.node.frontmatter.category,\n\t\t);\n\n\t\tlet categories = [];\n\t\tfor (const group in groups) {\n\t\t\tconst itens = groups[group];\n\t\t\tconst groupName = group !== \"null\" ? group : \"Others\";\n\t\t\tconst element = (\n\t\t\t\t<div key={groupName}>\n\t\t\t\t\t<h2 className=\"category\">{groupName + ` (${itens.length})`}</h2>\n\t\t\t\t\t<dl className=\"itens\">\n\t\t\t\t\t\t{itens.map(i => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={i.node.fileAbsolutePath}\n\t\t\t\t\t\t\t\tabsolutePath={i.node.fileAbsolutePath}\n\t\t\t\t\t\t\t\ttitle={i.node.frontmatter.title}\n\t\t\t\t\t\t\t\tcategory={groupName}\n\t\t\t\t\t\t\t\tdate={new Date(i.node.frontmatter.date)}\n\t\t\t\t\t\t\t\tlanguages={[\"en\", \"pt\"]}\n\t\t\t\t\t\t\t\tdescription={i.node.frontmatter.description}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</dl>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tcategories.push(element);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Title notHome />\n\t\t\t\t<Links />\n\t\t\t\t<h1 className=\"title\">Blog Posts</h1>\n\t\t\t\t{categories}\n\t\t\t</div>\n\t\t);\n\t}\n}\n//@ts-ignore\nexport const pageQuery = graphql`\n\tquery BlogQuery {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfileAbsolutePath\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tpublished\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import * as React from \"react\";\n// import Link from \"gatsby-link\";\n\ninterface IProps {\n\tnotHome?: boolean;\n}\n\nclass Title extends React.PureComponent<IProps, {}> {\n\tpublic render() {\n\t\treturn !this.props.notHome ? (\n\t\t\t<div className=\"index-title-link\">\n\t\t\t\t<h1>Kevin Oliveira</h1>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<a className=\"index-title-link\" href=\"/\">\n\t\t\t\t<h3>Kevin Oliveira</h3>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nexport default Title;\n","import * as React from \"react\";\n// import Link from \"gatsby-link\";\n\ninterface State {\n\tmenuOpen: boolean;\n}\n\ninterface IMenuItem {\n\tkey: string;\n\tto: string;\n\ttitle: string | JSX.Element;\n\texternal?: boolean;\n\ttarget?: string;\n\trel?: string;\n}\n\ninterface IProps {\n\tnotHome?: boolean;\n}\n\nclass Links extends React.Component<IProps, State> {\n\tstate = { menuOpen: false };\n\n\tprivate flipState = () => {\n\t\tthis.setState({ menuOpen: !this.state.menuOpen });\n\t};\n\n\trender() {\n\t\tconst menuItens: IMenuItem[] = [\n\t\t\t{ key: \"home\", to: \"/\", title: \"Home\" },\n\t\t\t{ key: \"blog\", to: \"/blog\", title: \"Posts\" },\n\t\t\t{ key: \"projects\", to: \"/projects\", title: \"Projects\" },\n\t\t\t{ key: \"broken\", to: \"/broken\", title: \"Broken Link\" },\n\t\t\t{ key: \"rss\", to: \"/rss.xml\", title: \"RSS\" },\n\t\t\t{\n\t\t\t\texternal: true,\n\t\t\t\tkey: \"github\",\n\t\t\t\tto: \"https://www.github.com/kevinoliveira\",\n\t\t\t\ttarget: \"_blank\",\n\t\t\t\ttitle: \"Github\",\n\t\t\t},\n\t\t];\n\t\tconst menuItensJSX = menuItens.map(item => {\n\t\t\tconst { title, to, external, ...rest } = item;\n\t\t\treturn !!external ? (\n\t\t\t\t<span key={to}>\n\t\t\t\t\t<a href={to} {...rest}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</a>\n\t\t\t\t\t&nbsp; &nbsp; &nbsp;\n\t\t\t\t</span>\n\t\t\t) : (\n\t\t\t\t<span key={to}>\n\t\t\t\t\t<a {...rest} href={to}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</a>\n\t\t\t\t\t&nbsp; &nbsp; &nbsp;\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\n\t\treturn <h5>{menuItensJSX}</h5>;\n\t}\n}\n\nexport default Links;\n","import * as React from \"react\";\nimport { language } from \"../../declarations\";\nimport \"./card.scss\";\n\ninterface IProps {\n\tlanguages: language[];\n\ttitle: string;\n\tcategory: string;\n\tdate?: Date;\n\tabsolutePath: string;\n\tdescription?: string;\n}\n\nclass Card extends React.PureComponent<IProps, {}> {\n\tpublic pathTourlResolver = (path: string) => {\n\t\treturn `/blog${path.split(\"src/md\")[1]}`.replace(\".md\", \"\");\n\t};\n\tpublic render() {\n\t\tconst { title, category, date, absolutePath, description } = this.props;\n\t\treturn (\n\n\t\t\t<a href={this.pathTourlResolver(absolutePath)} className=\"link\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<h3 >{title}</h3>\n\t\t\t\t\t\n\t\t\t\t\t<b>{`${date.getUTCFullYear()}-${date.getUTCMonth() +\n\t\t\t\t\t\t1}-${date.getUTCDate()} | ${category || \"Others\"} `}</b>\n\t\t\t\t\t<br />\n\t\t\t\t\t{description || \"no description\"}\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nexport default Card;\n"],"sourceRoot":""}